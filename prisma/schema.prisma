// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId 
  name    String?
  firstname    String?
  lastname     String?
  email        String?   @unique
  telephone    String?
  password     String?
  image      String?
  dob          DateTime? @default(now())
  location     String?
  bio          String   @default("Hi, I'm looking to find employment in your firm!")
  isPaid       Boolean  @default(false)
  emailVerified     DateTime?
  refreshToken String?
  createdAt    DateTime @default(now()) @map("createdAt") 
  updatedAt    DateTime @default(now()) @map("updatedAt")

  userCVs     CV[]
  accounts    Account[]

}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model CV {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  cvName    String?
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  sections Section[]
}

model Section {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String   @db.String
  order     Int      @db.Int
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cvId String @db.ObjectId
  cv   CV     @relation(fields: [cvId], references: [id], onDelete: Cascade)

  subSections SubSection[]
}

model SubSection {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String   @db.String
  subTitle  String   @db.String
  order     Int      @db.Int
  content   String[] @db.String
  dateFrom  DateTime
  dateTo    DateTime
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sectionId String  @db.ObjectId
  section   Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)
}